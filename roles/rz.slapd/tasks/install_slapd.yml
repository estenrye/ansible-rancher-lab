---
- name: Check for configure flag
  stat:
    path: "{{common.flags}}/slapd.installed"
  register: stat_result

- name: Answer slapd install questions
  debconf:
    name: slapd
    question: "{{item.question}}"
    value: "{{item.value}}"
    vtype: "{{item.vtype}}"
  loop:
    - question: slapd/internal/adminpw
      value: "{{slapd.debconf.default_admin_password}}"
      vtype: password
    - question: slapd/password2
      value: "{{slapd.debconf.default_admin_password}}"
      vtype: password
    - question: slapd/internal/generated_adminpw
      value: "{{slapd.debconf.default_admin_password}}"
      vtype: password
    - question: slapd/password1
      value: "{{slapd.debconf.default_admin_password}}"
      vtype: password
    - question: slapd/unsafe_selfwrite_acl
      value: note
      vtype: note
    - question: slapd/purge_database
      value: "{{slapd.debconf.purge_database}}"
      vtype: boolean
    - question: slapd/domain
      value: "{{slapd.debconf.domain}}"
      vtype: string
    - question: shared/organization
      value: "{{slapd.debconf.organization}}"
      vtype: string
    - question: slapd/backend
      value: "{{slapd.debconf.backend}}"
      vtype: select
    - question: slapd/no_configuration
      value: "{{slapd.debconf.no_configuration}}"
      vtype: boolean
    - question: slapd/password_mismatch
      value: note
      vtype: note
    - question: slapd/upgrade_slapcat_failure
      value: error
      vtype: error
    - question: slapd/ppolicy_schema_needs_update
      value: "{{slapd.debconf.ppolicy_schema_needs_update}}"
      vtype: select
    - question: slapd/dump_database_destdir
      value: "{{slapd.debconf.dump_database_destdir}}"
      vtype: string
    - question: slapd/invalid_config
      value: "{{slapd.debconf.invalid_config}}"
      vtype: boolean
    - question: slapd/dump_database
      value: "{{slapd.debconf.dump_database}}"
      vtype: select
    - question: slapd/move_old_database
      value: "{{slapd.debconf.move_old_database}}"
      vtype: boolean
  when: stat_result.stat.exists == false

- name: Install slapd packages
  apt:
    name: "{{slapd.packages}}"
    state: present

- name: Ensure python-ldap package is installed
  command: "{{ ansible_python_interpreter | default('/usr/bin/python') }} -m pip install python-ldap"
  become: yes
  when: stat_result.stat.exists == false

- name: Set password for LDAP Admin User.
  ldap_passwd:
    dn: "cn=admin,dc={{ldap.org}},dc={{ldap.tld}}"
    passwd: "{{ldap.directoryAdminPassword}}"
    bind_dn: "cn=admin,dc={{ldap.org}},dc={{ldap.tld}}"
    bind_pw: "{{slapd.debconf.default_admin_password}}"
  become: yes
  when: stat_result.stat.exists == false

- name: add install flag
  copy:
    content: ""
    dest: "{{common.flags}}/slapd.installed"
    force: no
    owner: root
    group: root
    mode: "u=rw,g=rw,o=r"
