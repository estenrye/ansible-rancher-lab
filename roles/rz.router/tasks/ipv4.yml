---
# - name: Flush all filter chain rules
#   iptables:
#     table: filter
#     flush: true

# - name: Flush all nat chain rules
#   iptables:
#     table: nat
#     flush: true
  
- name: Accept incoming packets from localhost interface
  iptables:
    table: filter
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
    comment: Ansible[router] - Accept incoming packets from localhost interface
  become: yes
  notify:
    - persist iptables

- name: Accept incoming packets from LAN interface
  iptables:
    table: filter
    chain: INPUT
    in_interface: eth1
    jump: ACCEPT
    comment: Ansible[router] - Accept incoming packets from LAN interface
  become: yes
  notify:
    - persist iptables

- name: Accept incoming packets from the WAN if the router initiated the connection
  iptables:
    table: filter
    chain: INPUT
    in_interface: eth0
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    comment: Ansible[router] - Accept incoming packets from the WAN if the router initiated the connection
  become: yes
  notify:
    - persist iptables

- name: Forward LAN packets to the WAN
  iptables:
    table: filter
    chain: FORWARD
    in_interface: eth1
    out_interface: eth0
    jump: ACCEPT
    comment: Ansible[router] - Forward LAN packets to the WAN
  become: yes
  notify:
    - persist iptables

- name: Forward WAN packets to the LAN if the LAN initiated the connection
  iptables:
    table: filter
    chain: FORWARD
    in_interface: eth0
    out_interface: eth1
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    comment: Ansible[router] - Forward WAN packets to the LAN if the LAN initiated the connection
  become: yes
  notify:
    - persist iptables

- name: Accept new SSH Connections.
  iptables:
    chain: INPUT
    protocol: tcp
    source: 172.16.0.0/12
    destination_port: '22'
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Ansible[router] - Accept new SSH connections.
  become: yes
  notify:
    - persist iptables

- name: Create Iptables NAT chain
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: eth0
    jump: MASQUERADE
    comment: Ansible[router] - NAT Masquerade
  become: yes
  notify:
    - persist iptables

- name: Default policy to drop all incoming ipv4 packets
  iptables:
    table: filter
    chain: INPUT
    policy: DROP
    comment: Ansible[router] - Default policy to drop all incoming ipv4 packets
  become: yes
  notify:
    - persist iptables

- name: Default policy to drop all forwarded ipv4 packets
  iptables:
    table: filter
    chain: FORWARD
    policy: DROP
    comment: Ansible[router] - Default policy to drop all forwarded ipv4 packets
  become: yes
  notify:
    - persist iptables

- name: Default policy to accept all outputed ipv4 packets
  iptables:
    table: filter
    chain: OUTPUT
    policy: ACCEPT
    comment: Ansible[router] - Default policy to accept all outputed ipv4 packets
  become: yes
  notify:
    - persist iptables
